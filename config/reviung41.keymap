/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

        behaviors {
                entdqt: enter_dquote {
                        compatible = "zmk,behavior-mod-morph";
                        label = "ENTER_DQUOTE";
                        #binding-cells = <0>;
                        bindings = <&kp ENTER>, <&kp DQT>;
                        mods = <(MOD_LSFT)>;
                };
                tldesc: tilde_escape {
                        compatible = "zmk,behavior-mod-morph";
                        label = "TILDE_ESCAPE";
                        #binding-cells = <0>;
                        bindings = <&kp ESC>, <&kp TILDE>;
                        mods = <(MOD_LSFT|MOD_RGUI)>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB     &kp Q    &kp W    &kp E    &kp R     &kp T              &kp Y    &kp U    &kp I       &kp O     &kp P      &kp BSPC
   &kp LCTRL   &kp A    &kp S    &kp D    &kp F     &kp G              &kp H    &kp J    &kp K       &kp L     &kp SEMI   &entdqt
   &kp LSHFT   &kp Z    &kp X    &kp C    &kp V     &kp B              &kp N    &kp M    &kp COMMA   &kp DOT   &kp FSLH   &mt RSHFT BSLH
                                          &kp LALT  &mo 1  &kp SPACE   &mo 2    &kp RGUI 
                        >;
                };

                lower_layer {
                        bindings = <
   &tldesc   &kp EXCL  &kp AT    &kp HASH  &kp DLLR   &kp PRCNT               &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR    &kp BSPC
   &trans    &kp HOME  &kp LEFT  &kp UP    &kp DOWN   &kp RIGHT               &kp PG_UP  &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC    &kp DQT
   &trans    &kp END   &kp LEFT  &kp DOWN  &kp RIGHT  &kp CAPS                &kp PG_DN  &kp MINUS  &kp LT    &kp GT    &kp QMARK   &kp PIPE
                                           &trans     &trans       &trans     &mo 3      &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &kp GRAVE       &kp N1    &kp N2    &kp N3    &kp N4     &kp N5             &kp N6     &kp N7     &kp N8     &kp N9    &kp N0          &kp DEL
   &mt LCTRL F1    &kp F2    &kp F3    &kp F4    &kp F5     &kp F6             &kp EXCL   &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT        &kp SQT
   &mt LSHFT F7    &kp F8    &kp F9    &kp F10   &kp F11    &kp F12            &kp TILDE  &kp PLUS   &kp LT     &kp GT    &mt RCTRL COLON &kp RSHFT PIPE
                                                 &trans     &mo 3    &trans    &trans     &trans
                        >;
                };

                adjust_layer {
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR               &kp C_PP     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none    &kp BSPC
   &none        &none        &none        &none        &none        &none                    &kp LEFT     &kp DOWN      &kp UP        &kp RIGHT   &none    &kp ENTER
   &none        &none        &none        &none        &reset       &bootloader              &kp HOME     &kp END       &kp PG_UP     &kp PG_DN   &none    &kp RSHFT
                                                       &trans       &trans         &tog 3    &trans       &trans
                        >;
                };
        };
};
